Aula 01 

para  usar o styled components. 

Sempre  colocar o theme provider por volta de tudo no  app 
No style global , usar o o create globalstyle

styled componente com o TS necessita 
de um arquivo de tipagem , @types/styled.d.ts // Melhor  copiar, qualquer erro o TS não funciona, verificar imports

definição dos styles global

colocar o GlobalStyle (provider),  no APP.tsx

importação de fontes / no index.html

Aula 02 : Component Header


Criando  header, dica de tamanho de tela FULL com  estilização para monitores  grande, 
como fazer isso dentro de  divs diferentes é  a sacada ,
alinhamento de body e header ver isso 

Aula 03: Component Summary
Alinhamento de cards easy mod

Aula 04 : Tabela de transações
Props para o styled component, 
formatacao de tabela easy  mod 


Aula 05: Component Search
Estilização fácil de button e input , alinhamento de button 


Aula 06: Criando modal acessível 
Cuidar com acessibilidade
ariakit
headlessui
chakra ui ( não recomendado, traz estilizacao )
radix-ui ( Mano tem tudo pronto , elementos limpos de formatação , 

Colocar elemento por volta de onde teremos  o modal

Propriedade do Dialog.trigger aschild, aproveita o botão filho , não cria novo botão 
Portal, massa, um HTML fora do elemento onde está 
overlay, fundo preto 
Title, ajuda no leitor de tela


Aula  07: Estilizando Modal 
Hack para  centralizar transform: translate(-50%, -50%)


Aula 08 : Botoões de entrada e saída
estilização

Aula 09: Radio button acessivel 
Formatando a radio button com styled  components:

2 ------- CONEXAO COM A  API -------


Aula 01 : Configurando JsonServer
cada prop passada para o objeto, pode ser pensado como uma entidade da 
nossa aplicação . 

npx json-server server.json -p 3335 -w -d 500
 http://localhost:3335/transactions

"dev:server" : "json-server server.json -p 3335 -w -d 500",
npm run dev:server

Aula 02 : Realizando requisição http

Fetch para chamar  aPi 
criando  await/async de forma elegante e chamando dentro do useEffect


Aula 03 : Criando contexto das transações
Multiplos components em diferentes pontos da aplicação  
precisando de uma info === Context

Tipagem no contexto

Tipagem no provider com REactNode, observando que ele recebe através de props 
o childrem e o childen desestruturado  é do tipo TransactionProviderProps

exportando o context e  importando nas páginas onde vou precisar utilizar os dados. 
UseContext


Aula 04 : Calculando resumo das transações

Utilizando reduce de forma simples


Aula 05 : Formatação de valores









